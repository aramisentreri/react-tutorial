{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["Table","this","props","characterData","removeCharacter","React","Component","TableHeader","TableBody","rows","map","row","index","key","name","job","onClick","Form","handleChange","event","target","value","setState","submitForm","handleSubmit","state","initialState","type","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"6QAEMA,E,iLACM,IAAD,EAEoCC,KAAKC,MAAxCC,EAFD,EAECA,cAAeC,EAFhB,EAEgBA,gBAEvB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWD,cAAeA,EAAeC,gBAAiBA,S,GAR9CC,IAAMC,WAcpBC,EAAc,WAClB,OACE,+BACE,4BACE,2CACA,sCAMFC,EAAY,SAAAN,GAChB,IAAMO,EAAOP,EAAMC,cAAcO,KAAI,SAACC,EAAIC,GACxC,OACE,wBAAIC,IAAKD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACE,4BAAQC,QAAS,kBAAMd,EAAME,gBAAgBQ,KAA7C,gBAMR,OACE,+BAAQH,IAKGT,I,OCIAiB,E,YA/Cb,WAAYf,GAAQ,IAAD,8BACjB,4CAAMA,KAURgB,aAAe,SAAAC,GAAU,IAAD,EACCA,EAAMC,OAAtBN,EADe,EACfA,KAAMO,EADS,EACTA,MAEb,EAAKC,SAAL,eACGR,EAAOO,KAfO,EAmBnBE,WAAa,WACX,EAAKrB,MAAMsB,aAAa,EAAKC,OAC7B,EAAKH,SAAS,EAAKI,eAlBnB,EAAKA,aAAe,CAClBZ,KAAM,GACNC,IAAK,IAGP,EAAKU,MAAQ,EAAKC,aARD,E,sEAwBT,IAAD,EACezB,KAAKwB,MAAnBX,EADD,EACCA,KAAMC,EADP,EACOA,IAEd,OACE,8BACE,uCACA,2BACEY,KAAK,OACLb,KAAK,OACLO,MAAOP,EACPc,SAAU3B,KAAKiB,eACjB,sCACA,2BACES,KAAK,OACLb,KAAK,MACLO,MAAON,EACPa,SAAU3B,KAAKiB,eACjB,2BAAOS,KAAK,SAASN,MAAM,SAASL,QAASf,KAAKsB,kB,GA1CvClB,IAAMC,WCqCVuB,E,2MAhCbJ,MAAQ,CACNK,WAAY,I,EAGd1B,gBAAkB,SAAAQ,GAAU,IAClBkB,EAAe,EAAKL,MAApBK,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMrB,Q,EAKnBY,aAAe,SAAAQ,GACb,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKL,MAAMK,YAAjB,CAA6BE,O,wEAKvD,OACI,yBAAKE,UAAU,aACb,kBAAC,EAAD,CAAO/B,cAAeF,KAAKwB,MAAMK,WAAY1B,gBAAiBH,KAAKG,kBACnE,kBAAC,EAAD,CAAMoB,aAAcvB,KAAKuB,oB,GAzBjBnB,IAAMC,WCCxB6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.000f792a.chunk.js","sourcesContent":["import React from 'react'\n\nclass Table extends React.Component {\n  render() {\n\n    const { characterData, removeCharacter } = this.props\n\n    return (\n      <table>\n        <TableHeader />\n        <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n      </table>\n    )\n  }\n}\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Person Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = props => {\n  const rows = props.characterData.map((row,index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete </button>\n        </td>\n      </tr>\n    )\n  })\n\n  return (\n    <tbody>{rows}</tbody>\n  )\n}\n\n\nexport default Table\n","import React from 'react'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.initialState = {\n      name: '',\n      job: '',\n    }\n\n    this.state = this.initialState\n  }\n\n  handleChange = event => {\n    const {name, value } = event.target\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state) // this adds the character to the characters list in the App's state\n    this.setState(this.initialState) // this clears the form after submit\n  }\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange} />\n        <label>Job</label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange} />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\nclass App extends React.Component {\n\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = index => {\n    const { characters } = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = character => {\n    this.setState({ characters: [...this.state.characters, character] })\n  }\n\n  render() {\n\n    return (\n        <div className=\"container\">\n          <Table characterData={this.state.characters} removeCharacter={this.removeCharacter} />\n          <Form handleSubmit={this.handleSubmit} />\n        </div>\n    )\n  }\n}\n\n\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n//import App from './Api'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}